<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>explore on Project F</title>
    <link>https://projectf.io/tags/explore/</link>
    <description>Recent content in explore on Project F</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>Â©2020 Will Green, Project F</copyright>
    <lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://projectf.io/tags/explore/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploring FPGA Graphics</title>
      <link>https://projectf.io/posts/fpga-graphics/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/fpga-graphics/</guid>
      <description>In all beginnings dwells a magic force
Herman Hesse, The Glass Bead Game, 1943
 Welcome to Exploring FPGA Graphics with Project F. In this series, we&amp;rsquo;ll be experimenting with FPGA graphics of all kinds, from a static square, through Pong and the Mandelbrot set, to bitmaps, text scrollers, and even 3D modelling. There&amp;rsquo;s no microcontroller in any of these designs: they&amp;rsquo;re simple logic described in SystemVerilog.
This post is a quick introduction to generating graphics with FPGAs: you&amp;rsquo;ll learn about display signals and simple colour graphics.</description>
    </item>
    
    <item>
      <title>Hello Arty - Part 2</title>
      <link>https://projectf.io/posts/hello-arty-2/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/hello-arty-2/</guid>
      <description>Welcome back to our three-part FPGA tutorial with SystemVerilog and the Digilent Arty A7. In part two, we&amp;rsquo;re going to learn about clocks and counting. Along the way, we&amp;rsquo;ll cover maintaining state with flip-flops, timing things with clock dividers, creating our first Verilog module, and controlling LEDs with pulse width modulation. You might be surprised how far counting takes you: by the end of this tutorial, you&amp;rsquo;ll be creating RGB lighting effects worthy of a cheesy gaming PC.</description>
    </item>
    
    <item>
      <title>Hello Arty - Part 1</title>
      <link>https://projectf.io/posts/hello-arty-1/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/hello-arty-1/</guid>
      <description>People who are really serious about software should make their own hardware.
Alan Kay, Creative Think seminar, 1982
 This three-part tutorial provides a quick introduction to FPGA development with SystemVerilog and the Digilent Arty A7 board. No prior experience of FPGA development is required, but basic knowledge of programming concepts is assumed. If you can write a simple program in Arduino, Python, or JavaScript, then you shouldn&amp;rsquo;t have any trouble.</description>
    </item>
    
  </channel>
</rss>