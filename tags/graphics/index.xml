<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphics on Project F - FPGA Development</title>
    <link>https://projectf.io/tags/graphics/</link>
    <description>Recent content in graphics on Project F - FPGA Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>©2020 Will Green, Project F</copyright>
    <lastBuildDate>Tue, 22 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://projectf.io/tags/graphics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Life on Screen</title>
      <link>https://projectf.io/posts/life-on-screen/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/life-on-screen/</guid>
      <description>He is Archimedes, Mick Jagger, Salvador Dalí, and Richard Feynman, all rolled into one.
The Guardian, John Horton Conway: the world&amp;rsquo;s most charismatic mathematician (2015)
 Welcome back to Exploring FPGA Graphics. In previous posts, we raced the beam: every frame the entire screen was generated from scratch. In this fourth part, we&amp;rsquo;re going to draw on a bitmap and drive the display from that. Bitmaps allow for more complex graphics, but require memory and increase latency.</description>
    </item>
    
    <item>
      <title>FPGA Pong</title>
      <link>https://projectf.io/posts/fpga-pong/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/fpga-pong/</guid>
      <description>Welcome back to Exploring FPGA Graphics. In the previous part we got an introduction to FPGA graphics; now we&amp;rsquo;re ready to put our graphical skills to work recreating the arcade classic: Pong.
In this series, we explore graphics at the hardware level and get a feel for the power of FPGAs. We start by learning how displays work, before racing the beam with Pong, drawing starfields and sprites, simulating life with bitmaps, drawing lines and triangles, and finally creating simple 3D models.</description>
    </item>
    
    <item>
      <title>Video Timings: VGA, SVGA, 720p, 1080p</title>
      <link>https://projectf.io/posts/video-timings-vga-720p-1080p/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/video-timings-vga-720p-1080p/</guid>
      <description>To work with standard monitors and TVs, you need to use the correct video timings. This recipe includes the timings for four standard display modes using analogue VGA, DVI, HDMI, or DisplayPort: 640x480 (VGA), 800x600 (SVGA), 1280x720, and 1920x1080 all at 60 Hz.
CRT monitors typically support higher refresh rates in addition to 60 Hz, such as 72 and 85 Hz, but most LCD monitors do not. There are an increasing number of televisions and monitors that do support high refresh rates, but these are beyond the scope of this guide.</description>
    </item>
    
    <item>
      <title>FPGA Ad Astra</title>
      <link>https://projectf.io/posts/fpga-ad-astra/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/fpga-ad-astra/</guid>
      <description>Welcome back to Exploring FPGA Graphics. In the previous part we created a version of the classic game, Pong. In this third part, we take inspiration from an even earlier game: Computer Space and work with sprites, bitmap fonts, and starfields.
In this series, we explore graphics at the hardware level and get a feel for the power of FPGAs. We start by learning how displays work, before racing the beam with Pong, drawing starfields and sprites, simulating life with bitmaps, drawing lines and triangles, and finally creating simple 3D models.</description>
    </item>
    
    <item>
      <title>Exploring FPGA Graphics</title>
      <link>https://projectf.io/posts/fpga-graphics/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/fpga-graphics/</guid>
      <description>In all beginnings dwells a magic force
Herman Hesse, Stages from The Glass Bead Game
 Welcome to Exploring FPGA Graphics. In this series we explore graphics at the hardware level and get a feel for the power of FPGAs. We start by learning how displays work, before racing the beam with Pong, drawing starfields and sprites, simulating life with bitmaps, drawing lines and triangles, and finally creating simple 3D models.</description>
    </item>
    
  </channel>
</rss>